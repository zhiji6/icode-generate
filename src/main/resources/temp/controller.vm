package ${table.packName}.controller;

import com.github.pagehelper.PageInfo;
import ${table.packName}.config.BaseCRUDController;
import ${table.packName}.domain.${table.className};
import ${table.packName}.service.${table.className}Service;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.util.Date;
import java.util.List;

@Controller
public class ${table.className}Controller extends BaseCRUDController<${table.className},Long>{

    @Autowired
    private ${table.className}Service ${table.classNameFirstLower}Service;


    @RequestMapping("/admin/${table.classNameFirstLower}_save")
    public String insert(${table.className} ${table.classNameFirstLower}  ,HttpServletRequest request){
        ${table.classNameFirstLower}Service.insert(${table.classNameFirstLower});
        return "";
    }

    @RequestMapping("/admin/${table.classNameFirstLower}_show")
    public String show(${table.className} ${table.classNameFirstLower} , Model model){
        ${table.classNameFirstLower} = ${table.classNameFirstLower}Service.selectOne(${table.classNameFirstLower});
        model.addAttribute("${table.classNameFirstLower}" , ${table.classNameFirstLower});
        return "";
    }

    @RequestMapping("/admin/list")
    public String pageList(Model model , ${table.className} ${table.classNameFirstLower},
                        @RequestParam(required = false, defaultValue = "1")int page,
                        @RequestParam(required = false, defaultValue = "10")int rows){

        List<${table.className}> ${table.classNameFirstLower}List = ${table.classNameFirstLower}Service.select${table.className}Page(${table.classNameFirstLower} , page , rows);
            model.addAttribute("pageInfo" , new PageInfo<>(${table.classNameFirstLower}List));
            model.addAttribute("queryParam", ${table.classNameFirstLower});
            model.addAttribute("page",page);
            model.addAttribute("rows", rows);
            return "";
        }
    }

    @RequestMapping("/admin/delete${table.className}ByIds")
    @ResponseBody
    public Object delete(@RequestParam(value = "ids[]") Long[] ids){
        ${table.classNameFirstLower}Service.deleteByIds(ids);
        return RESULT_OK;
    }

    @RequestMapping("/admin/update${table.className}")
    public String update(${table.className} ${table.classNameFirstLower} , Model model){
        ${table.classNameFirstLower}Service.update${table.className}(ids);
        return "";
    }

}